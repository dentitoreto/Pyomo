# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AJJRXkf1oUTVqK0zQXVRBfQwzQl8Cypn
"""

!pip install pyomo
!wget -N -q "https://matematica.unipv.it/gualandi/solvers/ipopt-linux64.zip"
!unzip -o -q ipopt-linux64
import pyomo.environ as pyo
from pyomo.opt import SolverFactory

model = pyo.ConcreteModel()

model.x1 = pyo.Var(domain = pyo.NonNegativeReals)
x1 = model.x1
model.y1 = pyo.Var(domain = pyo.NonNegativeReals)
y1 = model.y1
model.x2 = pyo.Var(domain = pyo.NonNegativeReals)
x2 = model.x2
model.y2 = pyo.Var(domain = pyo.NonNegativeReals)
y2 = model.y2
model.x3 = pyo.Var(domain = pyo.NonNegativeReals)
x3 = model.x3
model.y3 = pyo.Var(domain = pyo.NonNegativeReals)
y3 = model.y3
model.b = pyo.Var(domain = pyo.NonNegativeReals)
b = model.b
model.a = pyo.Var(domain = pyo.NonNegativeReals)
a = model.a

model.obj = pyo.Objective(expr = 2 * (a + b), sense = pyo.minimize)

model.co1 = pyo.Constraint(expr = x1 >= 6)
model.co2 = pyo.Constraint(expr = y1 >= 6)
model.co3 = pyo.Constraint(expr = x2 >= 12)
model.co4 = pyo.Constraint(expr = x2 >= 12)
model.co5 = pyo.Constraint(expr = x3 >= 16)
model.co6 = pyo.Constraint(expr = x3 >= 16)
model.co7 = pyo.Constraint(expr = x1 <= b - 6)
model.co9 = pyo.Constraint(expr = y1 <= a - 6)
model.co10 = pyo.Constraint(expr = x2 <= b - 12)
model.co11= pyo.Constraint(expr = y2 <= a - 12)
model.co12= pyo.Constraint(expr = x3 <= b - 16)
model.co13= pyo.Constraint(expr = y3 <= a - 16)
model.co14= pyo.Constraint(expr =  (x1-x2)**2 + (y1-y2)**2 >= 324)
model.co15= pyo.Constraint(expr = (x1-x3)**2 + (y1-y3)**2 >= 484)
model.co16= pyo.Constraint(expr = (x2-x3)**2 + (y2-y3)**2 >= 784)

solver = SolverFactory('ipopt', executable = '/content/ipopt')
results = solver.solve(model)
print(results)
print('objective function', model.obj())
print('x1=',x1())
print('y1=',y1())
print('x2=',x2())
print('y2=',y2())
print('x3=',x3())
print('y3=',y3())
print('a=',a())
print('b=',b())

